[{"M:\\XX\\eced web\\front\\ecedeptr\\src\\index.tsx":"1","M:\\XX\\eced web\\front\\ecedeptr\\src\\NavigBar\\Nvgbar.tsx":"2","M:\\XX\\eced web\\front\\ecedeptr\\src\\DepProfold\\Depro.tsx":"3","M:\\XX\\eced web\\front\\ecedeptr\\src\\NavigBar\\Mobnvgbar.tsx":"4","M:\\XX\\eced web\\front\\ecedeptr\\src\\Qlinksfold\\Qlinks.tsx":"5","M:\\XX\\eced web\\front\\ecedeptr\\src\\Carouselfold\\CarouselComp.tsx":"6","M:\\XX\\eced web\\front\\ecedeptr\\src\\Newsfold\\Newsindex.tsx":"7","M:\\XX\\eced web\\front\\ecedeptr\\src\\Mandvfold\\MandV.tsx":"8","M:\\XX\\eced web\\front\\ecedeptr\\src\\Footerfold\\Footer.tsx":"9","M:\\XX\\eced web\\front\\ecedeptr\\src\\Newsfold\\Newspage.tsx":"10","M:\\XX\\eced web\\front\\ecedeptr\\src\\Academicsfold\\Acadpage.tsx":"11","M:\\XX\\eced web\\front\\ecedeptr\\src\\Facultiesfold\\Facultypage.tsx":"12","M:\\XX\\eced web\\front\\ecedeptr\\src\\Labsfold\\Labslistpage.tsx":"13","M:\\XX\\eced web\\front\\ecedeptr\\src\\Labsfold\\Labspecific.tsx":"14","M:\\XX\\eced web\\front\\ecedeptr\\src\\Staticpagefold\\Staticapp.tsx":"15","M:\\XX\\eced web\\front\\ecedeptr\\src\\Testimonialsfold\\Testimonials.tsx":"16","M:\\XX\\eced web\\front\\ecedeptr\\src\\Labsfold\\Labslistpagemob.tsx":"17","M:\\XX\\eced web\\front\\ecedeptr\\src\\Labsfold\\Labspecificmob.tsx":"18","M:\\XX\\eced web\\front\\ecedeptr\\src\\Staticpagefold\\Staticappmob.tsx":"19"},{"size":8109,"mtime":1610743777196,"results":"20","hashOfConfig":"21"},{"size":11538,"mtime":1610696241349,"results":"22","hashOfConfig":"21"},{"size":1759,"mtime":1610441626785,"results":"23","hashOfConfig":"21"},{"size":7844,"mtime":1610744390118,"results":"24","hashOfConfig":"21"},{"size":894,"mtime":1610441626800,"results":"25","hashOfConfig":"21"},{"size":2033,"mtime":1610691676010,"results":"26","hashOfConfig":"21"},{"size":1466,"mtime":1610571253782,"results":"27","hashOfConfig":"21"},{"size":1643,"mtime":1610692473175,"results":"28","hashOfConfig":"21"},{"size":1622,"mtime":1609976485447,"results":"29","hashOfConfig":"21"},{"size":2299,"mtime":1610568879641,"results":"30","hashOfConfig":"21"},{"size":1519,"mtime":1610698398347,"results":"31","hashOfConfig":"21"},{"size":13113,"mtime":1610654206436,"results":"32","hashOfConfig":"21"},{"size":2447,"mtime":1610648641188,"results":"33","hashOfConfig":"21"},{"size":3445,"mtime":1610568842301,"results":"34","hashOfConfig":"21"},{"size":2267,"mtime":1610743652202,"results":"35","hashOfConfig":"21"},{"size":7819,"mtime":1610608345187,"results":"36","hashOfConfig":"21"},{"size":2295,"mtime":1610741226181,"results":"37","hashOfConfig":"21"},{"size":3145,"mtime":1610743379865,"results":"38","hashOfConfig":"21"},{"size":2115,"mtime":1610743676256,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"q0mmdo",{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"45"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"45"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"M:\\XX\\eced web\\front\\ecedeptr\\src\\index.tsx",[],"M:\\XX\\eced web\\front\\ecedeptr\\src\\NavigBar\\Nvgbar.tsx",["82"],"import React from \"react\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    nitc: {\r\n      marginTop: \"0px\",\r\n      marginBottom: \"0px\",\r\n      size: \"20px\",\r\n      fontSize: \"18px\",\r\n      fontWeight: \"lighter\",\r\n      fontFamily: \"Karla,sans-serif\",\r\n    },\r\n    logo: {\r\n      height: \"100px\",\r\n      filter: \"invert(100%)\",\r\n    },\r\n    groupa: {\r\n      paddingLeft: \"24px\",\r\n      width: \"100%\",\r\n    },\r\n    headinga: {\r\n      marginBottom: \"5px\",\r\n      fontFamily: \"Montserrat,sans-serif\",\r\n    },\r\n    navButton: {\r\n      fontFamily: \"Karla,sans-serif\",\r\n      fontWeight: \"bolder\",\r\n      fontSize: \"12px\",\r\n    },\r\n  })\r\n);\r\n\r\nexport default function PrimaryNavBar() {\r\n  const classes = useStyles();\r\n  const [anchorEl1, setAnchorEl1] = React.useState<null | HTMLElement>(null);\r\n  const [anchorEl2, setAnchorEl2] = React.useState<null | HTMLElement>(null);\r\n  const [anchorEl3, setAnchorEl3] = React.useState<null | HTMLElement>(null);\r\n  const [anchorEl4, setAnchorEl4] = React.useState<null | HTMLElement>(null);\r\n\r\n  const handleClick = (obj: any) => (\r\n    event: React.MouseEvent<HTMLButtonElement>\r\n  ) => {\r\n    obj(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = (obj: any) => () => {\r\n    obj(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <div>\r\n            <img\r\n              className={classes.logo}\r\n              src=\"https://upload.wikimedia.org/wikipedia/en/d/d0/National_Institute_of_Technology%2C_Calicut_Logo.png\"\r\n            />\r\n          </div>\r\n          <div className={classes.groupa}>\r\n            <h2 className={classes.headinga}>\r\n              DEPARTMENT OF ELECTRONICS AND COMMUNICATION ENGINEERING\r\n            </h2>\r\n            <div>\r\n              <p className={classes.nitc}>\r\n                NATIONAL INSTITUTE OF TECHNOLOGY CALICUT\r\n              </p>\r\n            </div>\r\n            <div style={{ width: \"100%\" }}>\r\n              <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                <div>\r\n                  <Button\r\n                    aria-controls=\"simple-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    onClick={handleClick(setAnchorEl1)}\r\n                    color=\"secondary\"\r\n                    className={classes.navButton}\r\n                  >\r\n                    PROGRAMMES\r\n                  </Button>\r\n                  <Menu\r\n                    id=\"programmes\"\r\n                    anchorEl={anchorEl1}\r\n                    keepMounted\r\n                    open={Boolean(anchorEl1)}\r\n                    onClose={handleClose(setAnchorEl1)}\r\n                    anchorOrigin={{\r\n                      vertical: \"bottom\",\r\n                      horizontal: \"center\",\r\n                    }}\r\n                    transformOrigin={{\r\n                      vertical: \"top\",\r\n                      horizontal: \"center\",\r\n                    }}\r\n                    elevation={0}\r\n                    getContentAnchorEl={null}\r\n                  >\r\n                    <a href=\"/btech\" style={{ color: \"#03205c\" }}>\r\n                      <MenuItem onClick={handleClose(setAnchorEl1)}>\r\n                        B.Tech\r\n                      </MenuItem>\r\n                    </a>\r\n                    <Divider />\r\n                    <a href=\"/mtech\" style={{ color: \"#03205c\" }}>\r\n                      <MenuItem onClick={handleClose(setAnchorEl1)}>\r\n                        M.Tech\r\n                      </MenuItem>\r\n                    </a>\r\n                    <Divider />\r\n                    <a href=\"/phd\" style={{ color: \"#03205c\" }}>\r\n                      <MenuItem onClick={handleClose(setAnchorEl1)}>\r\n                        PhD\r\n                      </MenuItem>\r\n                    </a>\r\n                  </Menu>\r\n                </div>\r\n\r\n                <div>\r\n                  <Button\r\n                    aria-controls=\"simple-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    onClick={handleClick(setAnchorEl2)}\r\n                    color=\"secondary\"\r\n                    className={classes.navButton}\r\n                  >\r\n                    PEOPLE\r\n                  </Button>\r\n                  <Menu\r\n                    id=\"people\"\r\n                    anchorEl={anchorEl2}\r\n                    keepMounted\r\n                    open={Boolean(anchorEl2)}\r\n                    onClose={handleClose(setAnchorEl2)}\r\n                    anchorOrigin={{\r\n                      vertical: \"bottom\",\r\n                      horizontal: \"center\",\r\n                    }}\r\n                    transformOrigin={{\r\n                      vertical: \"top\",\r\n                      horizontal: \"center\",\r\n                    }}\r\n                    elevation={0}\r\n                    getContentAnchorEl={null}\r\n                  >\r\n                    <a href=\"/faculty\" style={{ color: \"#03205c\" }}>\r\n                      <MenuItem>\r\n                        Faculty\r\n                      </MenuItem>\r\n                    </a>\r\n                    <Divider />\r\n                    <a href=\"/staff\" style={{ color: \"#03205c\" }}>\r\n                      <MenuItem>\r\n                        Staff\r\n                      </MenuItem>\r\n                    </a>\r\n                    <Divider />\r\n                    <a href=\"/adhoc\" style={{ color: \"#03205c\" }}>\r\n                      <MenuItem>\r\n                        Adhoc\r\n                      </MenuItem>\r\n                    </a>\r\n                  </Menu>\r\n                </div>\r\n\r\n                <div>\r\n                  <Button\r\n                    aria-controls=\"simple-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    onClick={handleClick(setAnchorEl3)}\r\n                    color=\"secondary\"\r\n                    className={classes.navButton}\r\n                  >\r\n                    RESEARCH\r\n                  </Button>\r\n                  <Menu\r\n                    id=\"research\"\r\n                    anchorEl={anchorEl3}\r\n                    keepMounted\r\n                    open={Boolean(anchorEl3)}\r\n                    onClose={handleClose(setAnchorEl3)}\r\n                    anchorOrigin={{\r\n                      vertical: \"bottom\",\r\n                      horizontal: \"center\",\r\n                    }}\r\n                    transformOrigin={{\r\n                      vertical: \"top\",\r\n                      horizontal: \"center\",\r\n                    }}\r\n                    elevation={0}\r\n                    getContentAnchorEl={null}\r\n                  >\r\n                    <a href=\"/areasofresearch\" style={{ color: \"#03205c\" }}>\r\n                      <MenuItem>\r\n                        Areas of Research\r\n                      </MenuItem>\r\n                    </a>\r\n                    <Divider />\r\n                    <a href=\"/phdongoing\" style={{ color: \"#03205c\" }}>\r\n                      <MenuItem>\r\n                        PhD Students (Ongoing)\r\n                      </MenuItem>\r\n                    </a>\r\n                    <Divider />\r\n                    <a href=\"/phdawarded\" style={{ color: \"#03205c\" }}>\r\n                      <MenuItem>\r\n                      PhD Students (Awarded)\r\n                      </MenuItem>\r\n                    </a>\r\n                  </Menu>\r\n                </div>\r\n\r\n                <div>\r\n                  <Button\r\n                    aria-controls=\"simple-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    onClick={handleClick(setAnchorEl4)}\r\n                    color=\"secondary\"\r\n                    className={classes.navButton}\r\n                  >\r\n                    FACILITIES\r\n                  </Button>\r\n                  <Menu\r\n                    id=\"facilities\"\r\n                    anchorEl={anchorEl4}\r\n                    keepMounted\r\n                    open={Boolean(anchorEl4)}\r\n                    onClose={handleClose(setAnchorEl4)}\r\n                    anchorOrigin={{\r\n                      vertical: \"bottom\",\r\n                      horizontal: \"center\",\r\n                    }}\r\n                    transformOrigin={{\r\n                      vertical: \"top\",\r\n                      horizontal: \"center\",\r\n                    }}\r\n                    elevation={0}\r\n                    getContentAnchorEl={null}\r\n                  >\r\n                    <a href=\"/labs\" style={{ color: \"#03205c\" }}>\r\n                      <MenuItem>\r\n                        Laboratories\r\n                      </MenuItem>\r\n                    </a>\r\n                    <Divider />\r\n                    <a href=\"/conferenceroom\" style={{ color: \"#03205c\" }}>\r\n                      <MenuItem>\r\n                        Conference Room\r\n                      </MenuItem>\r\n                    </a>\r\n                    <Divider />\r\n                    <a href=\"/seminarhall\" style={{ color: \"#03205c\" }}>\r\n                      <MenuItem>\r\n                        Seminar Hall\r\n                      </MenuItem>\r\n                    </a>\r\n                    <Divider />\r\n                    <a href=\"/departmentbuildings\" style={{ color: \"#03205c\" }}>\r\n                      <MenuItem>\r\n                        Department Buildings\r\n                      </MenuItem>\r\n                    </a>\r\n                    <Divider />\r\n                    <a href=\"/departmentlibrary\" style={{ color: \"#03205c\" }}>\r\n                      <MenuItem>\r\n                        Department Library\r\n                      </MenuItem>\r\n                    </a>\r\n                  </Menu>\r\n                </div>\r\n\r\n                <div>\r\n                  <Button\r\n                    aria-controls=\"simple-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    color=\"secondary\"\r\n                    className={classes.navButton}\r\n                  >\r\n                    ACTIVITIES\r\n                  </Button>\r\n                </div>\r\n\r\n                <div>\r\n                  <Button\r\n                    aria-controls=\"simple-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    color=\"secondary\"\r\n                    className={classes.navButton}\r\n                  >\r\n                    ALUMNI\r\n                  </Button>\r\n                </div>\r\n\r\n                <div>\r\n                  <Button\r\n                    aria-controls=\"simple-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    color=\"secondary\"\r\n                    className={classes.navButton}\r\n                  >\r\n                    ECEA\r\n                  </Button>\r\n                </div>\r\n\r\n                <div>\r\n                  <Button\r\n                    aria-controls=\"simple-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    color=\"secondary\"\r\n                  >\r\n                    <a href=\"https://eced.herokuapp.com/backend/people/login/\"><AccountCircleIcon /></a>\r\n                  </Button>\r\n                </div>\r\n              </Box>\r\n            </div>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n",["83","84"],"M:\\XX\\eced web\\front\\ecedeptr\\src\\DepProfold\\Depro.tsx",[],"M:\\XX\\eced web\\front\\ecedeptr\\src\\NavigBar\\Mobnvgbar.tsx",["85"],"M:\\XX\\eced web\\front\\ecedeptr\\src\\Qlinksfold\\Qlinks.tsx",[],"M:\\XX\\eced web\\front\\ecedeptr\\src\\Carouselfold\\CarouselComp.tsx",["86"],"import { Component } from \"react\";\r\nimport { CarouselProvider, Slider, Slide } from \"pure-react-carousel\";\r\nimport \"pure-react-carousel/dist/react-carousel.es.css\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\ninterface AppProps {}\r\ninterface AppState {\r\n  imgs: {cimgs: {img: string}[]},\r\n  totalimgs: number,\r\n  isLoadState: boolean\r\n}\r\n\r\nexport default class PrimaryCarousel extends Component<AppProps,AppState> {\r\n  constructor(props: any){\r\n    super(props);\r\n    this.state = {\r\n      imgs: {cimgs: [{img: \"\"}]},\r\n      totalimgs: 1,\r\n      isLoadState: false\r\n    }\r\n  };\r\n\r\n  componentDidMount(){\r\n    fetch('https://eced.herokuapp.com/backend/carousel/getimages/',\r\n      {method: 'GET'}\r\n    ).then(\r\n      response => response.json()\r\n      ).then(result =>{\r\n        this.setState({imgs:result});\r\n        this.setState({totalimgs: result.cimgs.length});\r\n        this.setState({isLoadState: true})\r\n      }).catch(error=>{console.log(\"Did not get images\")})\r\n  };\r\n\r\n  imgSliders = () =>{\r\n    let da = this.state.imgs.cimgs.map(function(objs,index){\r\n      return (\r\n        <Slide index={index}>\r\n          <div style={{ display: \"flex\", justifyContent: \"center\", height: \"50vh\" }}>\r\n            <img height={\"100%\"} src={objs.img} />                \r\n          </div>\r\n        </Slide>)\r\n        });\r\n    return da;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <CarouselProvider\r\n        naturalSlideWidth={100}\r\n        naturalSlideHeight={50}\r\n        totalSlides={this.state.totalimgs}\r\n        isPlaying={true}\r\n        infinite={true}\r\n        interval={3000}\r\n      >\r\n        <Slider>\r\n          {\r\n            this.state.isLoadState ? (\r\n              this.imgSliders()\r\n            ) : (\r\n              <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"50vh\" }} >\r\n                <CircularProgress />\r\n                <h4>Getting images...</h4>\r\n              </div>\r\n          )} \r\n        </Slider>\r\n      </CarouselProvider>\r\n    );\r\n  }\r\n}\r\n","M:\\XX\\eced web\\front\\ecedeptr\\src\\Newsfold\\Newsindex.tsx",[],"M:\\XX\\eced web\\front\\ecedeptr\\src\\Mandvfold\\MandV.tsx",[],"M:\\XX\\eced web\\front\\ecedeptr\\src\\Footerfold\\Footer.tsx",[],"M:\\XX\\eced web\\front\\ecedeptr\\src\\Newsfold\\Newspage.tsx",[],"M:\\XX\\eced web\\front\\ecedeptr\\src\\Academicsfold\\Acadpage.tsx",[],"M:\\XX\\eced web\\front\\ecedeptr\\src\\Facultiesfold\\Facultypage.tsx",["87"],"import { Container } from \"@material-ui/core\";\nimport React, { useState, Component } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { useMediaQuery } from \"react-responsive\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport \"./faculty.css\";\n\ninterface FacultyDetails {\n  id: number;\n  profile_pic: string;\n  display_name: string;\n  designation: string;\n  room: string;\n  email: string;\n  phone: string;\n  aoi: string;\n  cards?: {\n    heading: string;\n    descops: string;\n  }[];\n  onPress?: (id: number) => void | undefined;\n  isTwo?: boolean;\n}\n\ninterface Section {\n  heading: string;\n  descops: string;\n}\n\ninterface AppProps {}\ninterface AppState {\n  apidata : {\n    details: FacultyDetails[]\n  },\n  isLoadState: boolean\n}\n\ninterface topass {\n  details: FacultyDetails[]\n}\n\nfunction RightCard(faculty: FacultyDetails) {\n  function showcards(cards: Section[] | undefined){\n    if (cards) {\n      return(\n        cards.map(function(pobj,index){\n          return (\n            <Container style={{ paddingLeft: \"0px\", paddingRight:\"0px\" }}>\n            <div>\n              <Accordion>\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-controls=\"panel1a-content\"\n                  id=\"panel1a-header\"\n                >\n                  <h3>{ pobj.heading }</h3>\n                </AccordionSummary>\n                <AccordionDetails>\n                  <div className={ \"ql-container ql-snow\" }>\n                    <div className={ \"ql-editor\" } dangerouslySetInnerHTML={{ __html: pobj.descops }}></div>\n                  </div>\n                </AccordionDetails>\n              </Accordion>\n            </div>\n            </Container>\n          );\n        })\n      )\n    }\n    else{\n      return (<p><br></br></p>)\n    }\n    \n  }\n  return (\n  <Card variant=\"outlined\">\n    <CardContent>\n      <Typography variant=\"h4\"> {faculty.designation} </Typography>\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <CardMedia>\n          <img src={faculty.profile_pic} style={{ width: \"100px\" }} alt={\"Faculty\"} />\n        </CardMedia>\n      </div>\n      <TableContainer>\n        <Table aria-label=\"simple table\">\n          <TableBody>\n            <TableRow>\n              <TableCell component=\"th\" scope=\"row\">\n                <Typography variant=\"h5\"> Name </Typography>\n              </TableCell>\n              <TableCell align=\"left\">\n                {\" \"}\n                <Typography variant=\"h5\"> {faculty.display_name} </Typography>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell component=\"th\" scope=\"row\">\n                <Typography variant=\"h5\"> Room </Typography>\n              </TableCell>\n              <TableCell align=\"left\">\n                {\" \"}\n                <Typography variant=\"h5\"> {faculty.room} </Typography>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell component=\"th\" scope=\"row\">\n                <Typography variant=\"h5\"> Email </Typography>\n              </TableCell>\n              <TableCell align=\"left\">\n                {\" \"}\n                <Typography variant=\"h5\"> {faculty.email} </Typography>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell component=\"th\" scope=\"row\">\n                <Typography variant=\"h5\"> Phone </Typography>\n              </TableCell>\n              <TableCell align=\"left\">\n                {\" \"}\n                <Typography variant=\"h5\"> {faculty.phone} </Typography>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell component=\"th\" scope=\"row\">\n                <Typography variant=\"h5\"> Areas of Interest </Typography>\n              </TableCell>\n              <TableCell align=\"left\">\n                {\" \"}\n                <Typography variant=\"h5\"> {faculty.aoi} </Typography>\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n      {showcards(faculty.cards)}\n    </CardContent>\n  </Card>\n  );\n}\n\nfunction LeftTabCard(faculty: FacultyDetails) {\n  return (\n  <div className={\"fac\"}>\n    <Card\n      variant=\"outlined\"\n      onClick={() => {\n        if (faculty.onPress) faculty.onPress(faculty.id);\n      }}\n      style={{\n        marginTop: \"10px\",\n      }}\n    >\n      <CardActionArea\n        style={{\n          margin: \"0px\",\n        }}\n        onClick={() => {\n          if (faculty.onPress) faculty.onPress(faculty.id);\n        }}\n      >\n        <CardContent style={{ padding: \"5px\" }}>\n          <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n            <CardMedia><img src={faculty.profile_pic} style={{ height: \"100px\" }} alt={\"Faculty\"} /></CardMedia>\n            <div>\n              <TableContainer>\n                <Table aria-label=\"simple table\">\n                  <TableRow>\n                    <TableCell align=\"left\">\n                      {\" \"}\n                      <Typography variant=\"h6\"> {faculty.display_name} </Typography>\n                    </TableCell>\n                  </TableRow>\n                  <TableBody>\n                    <TableRow>\n                      <TableCell align=\"left\">\n                        {\" \"}\n                        <Typography variant=\"h6\"> {faculty.designation} </Typography>\n                      </TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell align=\"left\">\n                        {\" \"}\n                        <Typography variant=\"h6\"> {faculty.email} </Typography>\n                      </TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell align=\"left\">\n                        {\" \"}\n                        <Typography variant=\"h6\"> {faculty.phone} </Typography>\n                      </TableCell>\n                    </TableRow>\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </div>\n          </div>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  </div>\n  );\n}\n\nfunction Impfunction(dataFull: topass) {\n  const [filtered, setFiltered] = useState<[FacultyDetails | undefined]>([\n    undefined,\n  ]);\n  const [rId, setrId] = useState(1); // 0 id for HOD\n  const [Query, setQuery] = useState(\"\");\n  const isOne = useMediaQuery({ query: \"(max-width: 900px)\" });\n  const isTwo = useMediaQuery({ query: \"(max-width: 730px)\" });\n  const [openRes, setopenRes] = useState(false);\n  \n  function handleChange(\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) {\n    let query = event.currentTarget.value;\n    setQuery(query);\n    console.log(query);\n    let f: [FacultyDetails | undefined] = [undefined];\n    for (let data in dataFull.details) {\n      if (dataFull.details[data].display_name.toLowerCase().includes(query.toLowerCase()))\n        f.push(dataFull.details[data]);\n    }\n    setFiltered(f);\n  }\n  function leftPress(id: number) {\n    setrId(id);\n  }\n  function leftPress1(id: number) {\n    setopenRes(false);\n    setrId(id);\n  }\n  return (\n    <Container\n      style={{\n        display: \"flex\",\n        flexDirection: \"row\",\n        backgroundColor: \"#fff\",\n        marginTop:\"15px\",\n        padding: \"0px\",\n        minHeight: \"100vh\",\n        maxHeight: \"100vh\",\n        overflowY: \"auto\",\n        justifyContent: \"center\",\n      }}\n    >\n      <Container\n        style={{\n          overflowY: \"hidden\",\n          backgroundColor: \"#fff\",\n          padding: isTwo ? \"0px\" : isOne ? \"20px\" : \"40px\",\n          position: isTwo ? \"absolute\" : \"inherit\",\n          zIndex: isTwo ? 10 : 0,\n          width: isTwo ? \"90%\" : \"100%\",\n          overflowX: \"hidden\",\n          paddingBottom: \"0px\",\n          marginBottom: \"20px\"\n        }}\n      >\n        <TextField\n          id=\"standard-basic\"\n          label=\"Search\"\n          variant=\"outlined\"\n          onChange={handleChange}\n          style={{ marginLeft: isTwo ?\"0px\":\"25px\", width: isTwo ? \"100%\" : \"89%\" ,backgroundColor:\"#bffcf8\"}}\n          onFocus={() => {\n            setopenRes(true);\n          }}\n          onBlur={() => {\n            setTimeout(() => setopenRes(false), 300);\n          }}\n        />\n        {((isTwo && openRes) || !isTwo) && (\n          <Container\n            style={{ overflowY: \"scroll\", height: isTwo ? \"55vh\" : \"85vh\" }}\n          >\n            {Query !== \"\" && filtered.length === 1 ? (\n              <Typography> No Faculy Matches your search </Typography>\n            ) : Query === \"\" ? (\n              dataFull.details.map((item1) => {\n                return (\n                  \n                  <LeftTabCard\n                    id={item1.id}\n                    profile_pic = {item1.profile_pic}\n                    display_name={item1.display_name}\n                    designation = {item1.designation}\n                    room = {item1.room}\n                    email = {item1.email}\n                    phone={item1.phone}\n                    aoi = {item1.aoi}\n                    cards = {item1.cards}\n                    onPress={leftPress}\n                  />\n                );\n              })\n            ) : (\n              filtered.map((item2) => {\n                if (item2 !== undefined)\n                  return (\n                    <LeftTabCard\n                    id={item2.id}\n                    profile_pic = {item2.profile_pic}\n                    display_name={item2.display_name}\n                    designation = {item2.designation}\n                    room = {item2.room}\n                    email = {item2.email}\n                    phone={item2.phone}\n                    aoi = {item2.aoi}\n                    cards = {item2.cards}\n                    onPress={leftPress}\n                    />\n                  );\n                else return null;\n              })\n            )}\n          </Container>\n        )}\n      </Container>\n\n      <Container\n        style={{\n          overflowY: \"auto\",\n          backgroundColor: \"#fff\",\n          padding: isOne ? \"20px\" : \"40px\",\n          marginTop: isTwo ? \"80px\" : \"0px\",\n        }}\n      >\n        {dataFull.details.map((item1) => {\n          if (item1.id === rId)\n            return (\n              <RightCard\n                id={item1.id}\n                profile_pic = {item1.profile_pic}\n                display_name={item1.display_name}\n                designation = {item1.designation}\n                room = {item1.room}\n                email = {item1.email}\n                phone={item1.phone}\n                aoi = {item1.aoi}\n                cards = {item1.cards}\n              />\n            );\n          else return null;\n        })}\n      </Container>\n    </Container>\n  );\n}\n\nexport default class Facultyapp extends Component<AppProps,AppState> {\n  constructor(props: any){\n    super(props);\n    this.state = {\n        apidata: { details :[\n          {\n            id: 0,\n            profile_pic: '',\n            display_name: 'Loading...',\n            designation: 'Loading...',\n            room: 'Loading...',\n            email: 'Loading...',\n            phone: 'Loading...',\n            aoi: 'Loading...',\n            cards: [{\n              heading: 'Loading...',\n              descops: 'Loading...'\n            }]\n          }\n        ]\n      },\n      isLoadState: false\n    }};\n\n  componentDidMount(){\n    fetch('https://eced.herokuapp.com/backend/faculty/allfac/',\n      {method: 'GET'}\n    ).then(\n      response => response.json()\n      ).then(result =>{\n        this.setState({apidata:result});\n        this.setState({isLoadState:true});\n      }).catch(error=>{console.log(\"Did not get Faculty details\")})\n  };\n\n  getfaculty = () => {\n    return (\n      <div>\n        <Impfunction \n          {...this.state.apidata}\n        />\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <div>\n      {\n        this.state.isLoadState ? (\n          this.getfaculty()\n        ) : (\n          <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"80vh\" }} >\n            <CircularProgress />\n              <h4>Getting faculty details...</h4>\n          </div>\n        )\n      }\n      </div>\n    );\n  }\n}","M:\\XX\\eced web\\front\\ecedeptr\\src\\Labsfold\\Labslistpage.tsx",[],"M:\\XX\\eced web\\front\\ecedeptr\\src\\Labsfold\\Labspecific.tsx",[],"M:\\XX\\eced web\\front\\ecedeptr\\src\\Staticpagefold\\Staticapp.tsx",[],"M:\\XX\\eced web\\front\\ecedeptr\\src\\Testimonialsfold\\Testimonials.tsx",[],"M:\\XX\\eced web\\front\\ecedeptr\\src\\Labsfold\\Labslistpagemob.tsx",[],"M:\\XX\\eced web\\front\\ecedeptr\\src\\Labsfold\\Labspecificmob.tsx",[],"M:\\XX\\eced web\\front\\ecedeptr\\src\\Staticpagefold\\Staticappmob.tsx",[],{"ruleId":"88","severity":1,"message":"89","line":64,"column":13,"nodeType":"90","endLine":67,"endColumn":15},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"88","severity":1,"message":"89","line":49,"column":13,"nodeType":"90","endLine":52,"endColumn":15},{"ruleId":"88","severity":1,"message":"89","line":40,"column":13,"nodeType":"90","endLine":40,"endColumn":51},{"ruleId":"95","severity":1,"message":"96","line":250,"column":12,"nodeType":"97","messageId":"98","endLine":250,"endColumn":22},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["99"],"no-negated-in-lhs",["100"],"@typescript-eslint/no-unused-vars","'leftPress1' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]